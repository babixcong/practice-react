{"version":3,"sources":["components/title/title.js","components/filters/filter.js","components/item/item.js","components/todo-list/list-item.js","components/create/create.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","className","unCompleted","Filter","type","name","onChange","onChangeFilter","checked","defaultProps","Item","onClick","completed","removeTodo","ListItem","listItems","map","item","handleCheckBox","id","Create","state","create","title","this","setState","addTodo","closeCreate","alert","e","target","value","openCreate","ref","c","updateChange","placeholder","React","Component","App","todos","filter","t","length","index","_findIndex","todo","left","newName","ids","_map","max","Math","push","changeFilter","data-reactroot","countUncompletedTodo","filterTodo","handleRemove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15ee8645.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Title(props) {\n\treturn (\n\t\t<div className=\"todos\">\n\t\t\t<div className=\"todos--header\">\n\t          \"You've got {props.unCompleted} thing(s) to do\"\n\t        </div>\n        </div>\n\t);\n}\n\nexport default Title;\n","import React from 'react';\n\nfunction Filter(props) {\n\treturn (\n\t\t<div className=\"todo__filter\">\n        <span className=\"todo__filter-item\">\n          <label className=\"control control--radio\">Show All\n            <input type=\"radio\" name=\"filter\" onChange={() => props.onChangeFilter('SHOW_ALL')} checked={props.type === 'SHOW_ALL'} />\n            <div className=\"control__indicator\"></div>\n          </label>\n        </span>\n        <span className=\"todo__filter-item\">\n          <label className=\"control control--radio\">Show Completed\n            <input type=\"radio\" name=\"filter\" onChange={() => props.onChangeFilter('COMPLETED')} checked={props.type === 'COMPLETED'} />\n            <div className=\"control__indicator\"></div>\n          </label>\n        </span>\n        <span className=\"todo__filter-item\">\n          <label className=\"control control--radio\">Show Uncompleted\n            <input type=\"radio\" name=\"filter\" onChange={() => props.onChangeFilter('UNCOMPLETED')} checked={props.type === 'UNCOMPLETED'} />\n            <div className=\"control__indicator\"></div>\n          </label>\n        </span>\n  \t</div>\n\t);\n}\n\nFilter.defaultProps = {\n      type: 'SHOW_ALL',\n}\n\nexport default Filter;\n","import React from 'react';\n\nfunction Item(props) {\n\treturn (\n\t\t<div className=\"todo__item\">\n      <div className=\"row\">\n        <div className=\"todo-name\">\n        \t<label className=\"control control--checkbox\">{props.name}\n          \t<input type=\"checkbox\" onChange={props.onClick} checked={props.completed}/>\n          \t<div className=\"control__indicator\"></div>\n        \t</label>\n        </div>\n      \t<div className=\"button-remove\">\n        <button onClick={props.removeTodo}>Remove</button>\n        \t{/*<span>-</span>*/}\n      \t</div>\n        </div>\n    </div>\n\t);\n}\n\nItem.defaultProps = {\n    name: 'To do',\n    completed: false,\n}\nexport default Item;\n","import React from 'react';\nimport Item from '../item/item';\n\nfunction ListItem(props) {\n\treturn (\n\t\t<div className=\"todo__list\">\n\t\t{\n\t\t\tprops.listItems.map(item => {\n\t\t\t\treturn <Item key={item.id} completed={item.completed} onClick={()=> props.handleCheckBox(item.id)} name={item.name} removeTodo={() => props.removeTodo(item.id)}/>\n\t\t\t})\n\n\t\t}\n      \t</div>\n\t);\n}\n\nexport default ListItem;\n","import React from 'react';\n\nclass Create extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcreate: false,\n\t\t\ttitle: '',\n\t\t};\n\n\t}\n\n\topenCreate() {\n\t\tthis.setState({create: true});\n\t}\n\n\tcloseCreate() {\n\t\tthis.setState({\n\t\t\tcreate: false,\n\t\t\ttitle: '',\n\t\t});\t}\n\n\taddTodo() {\n\t\tif (this.state.title === '') {\n\t\t\talert('Enter todo name');\n\t\t\treturn;\n\t\t}\n\t\tthis.props.addTodo(this.state.title);\n\t\tthis.closeCreate();\n\t\t\n\t}\n\n\tupdateChange(e) {\n\t\tthis.setState({title:e.target.value});\n\t}\n\n\trender() {\n\t\tif (this.state.create === false) {\n\t\t\treturn (\n\t\t\t\t<div className=\"create-todo\">\n\t\t            <div className=\"new-button\">\n\t\t                <button onClick={() => this.openCreate()}>New thing to do</button>\n\t\t            </div>\n\t\t        </div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"save-todo\">\n\t            <input name=\"name\"\tref={(c) => this.name = c} value={this.state.title} onChange={(e) => this.updateChange(e)} placeholder=\"Adding todo here\"/>\n\t            <button onClick={() => this.addTodo()}>Save</button>\n\t            <button onClick={() => this.closeCreate()}>Cancel</button>\n\t        </div>\n\n\t\t);\n\t}\n}\n\nexport default Create;\n","import React from 'react';\nimport './template.css';\nimport Title from './components/title/title';\nimport Filter from './components/filters/filter';\nimport ListItem from './components/todo-list/list-item';\nimport Create from './components/create/create';\nimport _findIndex from 'lodash/findIndex';\nimport _map from 'lodash/map';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            todos: [\n                {id: 1, name: 'Test todo 1', completed: false},\n                {id: 2, name: 'Test todo 2', completed: false},\n                {id: 3, name: 'Test todo 3', completed: true},\n                {id: 4, name: 'Test todo 4', completed: true},\n                {id: 5, name: 'Test todo 5', completed: false},\n                {id: 6, name: 'Test todo 6', completed: true},\n                {id: 7, name: 'Test todo 7', completed: false}\n            ],\n            filter: 'SHOW_ALL',\n        };\n    }\n\n    countUncompletedTodo() {\n        let todos = this.state.todos;\n        return todos.filter(t => !t.completed).length;\n    }\n\n    changeFilter(filter) {\n      this.setState({filter});\n    }\n\n    filterTodo() {\n        const {todos, filter} = this.state;\n\n        switch (filter) {\n            case 'SHOW_ALL':\n                return todos;\n            case 'COMPLETED': \n                return todos.filter(t => t.completed);\n            case 'UNCOMPLETED': \n                return todos.filter(t => !t.completed);\n        }\n    }\n\n    // find checkbox and update it\n    handleCheckBox(id) {\n      const todos = this.state.todos;\n      let index = _findIndex(todos, {id});\n      if (index !== -1) {\n          let todo = todos[index];\n          todo.completed = !todo.completed;\n          todos[index] = todo;\n          this.setState({todos});\n      }\n    }\n\n    handleRemove(id) {\n      const todos = this.state.todos;\n      let left = todos.filter(t => t.id !== id);\n      this.setState({todos: left});\n    }\n\n    addTodo(newName) {\n      let todos = this.state.todos;\n      let ids = _map(todos, 'id');\n      let max = Math.max(...ids);\n      todos.push({\n        id: max+1,\n        name: newName,\n        completed: false,\n      });\n\n      this.setState({\n        todos: todos,\n      });\n      if (this.state.filter === 'COMPLETED') {\n        this.changeFilter('UNCOMPLETED');\n      }\n    }\n\n    render() {\n        return (\n            <div data-reactroot=\"\" className=\"app__content\">\n                <div className=\"app__header\"></div>\n                <div className=\"app__body\">\n                    <Title unCompleted={this.countUncompletedTodo()} />\n                    <Filter onChangeFilter={(filter) => this.changeFilter(filter)} type={this.state.filter} />\n                    <ListItem listItems={this.filterTodo()} handleCheckBox={(id) => this.handleCheckBox(id)} removeTodo={(id) => this.handleRemove(id)} />\n                    <Create addTodo={(name) => this.addTodo(name)} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}